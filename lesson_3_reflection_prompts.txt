When would you want to use a remote repository rather than keeping all your work local?
Usually when working with others, either through a private repo with your own team or an open source repo.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Pull when it makes the most sense in your workflow, generally between commits or when someone else has pushed a major commit. You don't want Git automatically updating for you and overwriting your most recent changes.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
Fork: Copy a GitHub repo into your GitHub profile. Use when you want to create a different version of someone else's existing repo and you want to give them credit.
Clone: Copy a GitHub repo onto your local machine. Use when you want to work directly with that repo.
Branch: Create a new set of commits that deviates from the master branch. Use when you want to make new or experimental commits to your current repo that won't affect master/production.

What is the benefit of having a copy of the last known state of the remote stored locally?
One benefit is being able to compare the changes you've made without requiring internet connectivity.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
We could save the files in a cloud storage system like Dropbox, but that would only save one "branch" and there wouldn't be a way to automatically merge two versions of a document. However people would be able to collaborate in real time without having to check out files or comparing their local copy to the remote.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
I would use branches when working on a complex project or one with multiple contributors. I might work directly on master if it is a small, personal project.